# Docker compose 버전
version: '3.8'
# 가동할 컨테이너 목록
services:
  db:
    # 사용할 이미지(Docker Hub 또는 로컬에 저장된 Image)
    image: mysql:8.0
    # container_name: cohort_db
    restart: always
    # 외부에서 컨테이너 내부로 연결되는 포트 목록
    ports:
      - 32000:3306
    # 컨테이너 내에서 사용되는 환경 변수
    environment:
      # 어드민계정과 비밀번호
      MYSQL_USER: admin
      MYSQL_PASSWORD: ssafy
      # <Database root 계정 비밀 번호 설정 : ssafy>
      MYSQL_ROOT_PASSWORD: ssafy
      TZ: 'Asia/Seoul'
    # privileged: true
    # 실제 드라이브와 컨테이너의 드라이브를 연결(Mount)
    volumes:
      - ./db/:/docker-entrypoint-initdb.d
      #볼륨에 db 연결 (컨테이너 종료시에도 날아가지 않게)
      - 'cohort_volume:/var/lib/mysql'
    # 컨테이너 내부에서 사용되는 네트워크
    networks:
      - serve
    # 이거 안해주면 aws에서 mbind: Operation not permitted 에러 뜸
    security_opt:
      - seccomp:unconfined

  app:
    # 공개된 Image 가 아닌 Dockerfile 을 통한 빌드 이미지 사용
    build:
      context: ./backend
    restart: always
    # container_name: cohort_app
    ports:
      - 8080:8080
    environment:
      TZ: Asia/Seoul
      #Spring application.properties DB 설정
      #  SPRING_DATASOURCE_URL: 'jdbc:mysql://localhost:3306/gaon?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true'
      SPRING_DATASOURCE_URL: 'jdbc:mysql://db:3306/cohort?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true'
      server.address: 0.0.0.0
      # 의존 컨테이너
    depends_on:
      - db
    #   - kurento
    networks:
      - serve
  react:
    # 공개된 Image 가 아닌 Dockerfile 을 통한 빌드 이미지 사용
    build:
      context: ./frontend
    restart: always
    # container_name: cohort_react
    ports:
      - 5000:3000
    environment:
      TZ: Asia/Seoul
      server.address: 0.0.0.0
      # 의존 컨테이너
    networks:
      - serve
  node:
    # 공개된 Image 가 아닌 Dockerfile 을 통한 빌드 이미지 사용
    build:
      context: ./node-backend
    restart: always
    # container_name: cohort_react
    ports:
      - 4000:4000
    environment:
      TZ: Asia/Seoul
      server.address: 0.0.0.0
      # 의존 컨테이너
    networks:
      - serve
volumes:
  cohort_volume:
networks:
  serve:
