-- MySQL dump 10.13  Distrib 8.0.23, for Win64 (x86_64)
--
-- Host: k5b104.p.ssafy.io    Database: cohort
-- ------------------------------------------------------
-- Server version	8.0.27

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `post`
--

DROP TABLE IF EXISTS `post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `post` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `content` text COLLATE utf8mb4_general_ci,
  `created` datetime(6) DEFAULT NULL,
  `title` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `user_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK72mt33dhhs48hf9gcqrq4fxte` (`user_id`),
  CONSTRAINT `FK72mt33dhhs48hf9gcqrq4fxte` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `post`
--

LOCK TABLES `post` WRITE;
/*!40000 ALTER TABLE `post` DISABLE KEYS */;
INSERT INTO `post` VALUES (19,'def binary_search(left: int, right: int, target: int) -> int:\r\n    while left <= right:\r\n        mid = left + (right - left) // 2\r\n        if data[mid] == target:\r\n            return 1\r\n        elif data[mid] > target:\r\n            right = mid - 1\r\n        else:\r\n            left = mid + 1\r\n    return 0\r\n\r\n\r\nn = int(input())\r\ndata = list(map(int, input().split()))\r\ndata.sort()\r\n\r\nm = int(input())\r\ndata2 = list(map(int, input().split()))\r\n\r\nfor target in data2:\r\n    print(binary_search(0, len(data) - 1, target))','2021-11-18 14:49:36.856000','1920_수 찾기',5),(20,'#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint empty_class[1000][1000];\r\nint student_likestu[1000][1000];\r\nint N;\r\nint bignum;\r\nint bignum2;\r\nint dx[4] = { 0,0,-1,1 };\r\nint dy[4] = { -1,1,0,0 };\r\nint cnt;\r\nint cnt2;\r\nint satisfyX[1000];\r\nint satisfyY[1000];\r\nint satisfyX2[1000];\r\nint satisfyY2[1000];\r\nint store;\r\nint store2;\r\nint result;\r\nint CCnt;\r\nint xval;\r\nint yval;\r\nint resultx;\r\nint resulty;\r\nint resultX[1000];\r\nint resultY[1000];\r\n\r\nvoid reset3() {\r\n    int xval = 0;\r\n    int yval = 0;\r\n    int resultx = 0;\r\n    int resulty = 0;\r\n    for (int i = 1; i <= 1000; i++) {\r\n        resultX[i] = 0;\r\n    }\r\n    for (int i = 1; i <= 1000; i++) {\r\n        resultX[i] = 0;\r\n    }\r\n}\r\n\r\nvoid printf_all() {\r\n    for (int i = 1; i <= N; i++) {\r\n        for (int j = 1; j <= N; j++) {\r\n            cout << empty_class[i][j] << \' \';\r\n        }\r\n        cout << endl;\r\n    }\r\n}\r\n\r\nint searchX(int val) {\r\n    int X;\r\n    for (int i = 1; i <= store2; i++) {\r\n        if (satisfyX2[i] == val) {\r\n            X = i;\r\n        }\r\n    }\r\n    return X;\r\n}\r\n\r\nint searchY(int val) {\r\n    int Y;\r\n    for (int i = 1; i <= store2; i++) {\r\n        if (satisfyY2[i] == val) {\r\n            Y = i;\r\n        }\r\n    }\r\n    return Y;\r\n}\r\n\r\nint sort(int resultX[]) {\r\n    for (int i = 1; i <= store2 - 1; i++) {\r\n        for (int j = 1; j <= store2 - i - 1; j++) {\r\n            if (resultX[j] >= resultX[j + 1]) {\r\n                int tmp = resultX[j];\r\n                resultX[j] = resultX[j + 1];\r\n                resultX[j + 1] = tmp;\r\n            }\r\n        }\r\n    }\r\n    for (int i = 1; i < store2; i++) {\r\n        if (resultX[i + 1] == resultX[1]) {\r\n            CCnt++;\r\n        }\r\n    }\r\n    return resultX[1];\r\n}\r\n\r\nint sort2(int resultY[]) {\r\n    for (int i = 1; i <= store2 - 1; i++) {\r\n        for (int j = 1; j <= store2 - i - 1; j++) {\r\n            if (resultY[j] > resultY[j + 1]) {\r\n                CCnt++;\r\n                int tmp = resultY[j];\r\n                resultY[j] = resultY[j + 1];\r\n                resultY[j + 1] = tmp;\r\n            }\r\n        }\r\n    }\r\n    return resultY[1];\r\n}\r\n\r\nvoid Nextthree(int stux) {\r\n    int ans = 1;\r\n    for (int i = 1; i <= store2; i++) {\r\n        if (satisfyX2[i] < satisfyX2[ans]) {\r\n            ans = i;\r\n        }\r\n        else if(satisfyX2[i] == satisfyX2[ans] && satisfyY2[i] < satisfyY2[ans]){\r\n            ans = i;\r\n        }\r\n    }\r\n    empty_class[satisfyX2[ans]][satisfyY2[ans]] = student_likestu[stux][1];\r\n}\r\n\r\nvoid reset2() {\r\n    bignum2 = 0;\r\n    store2 = 0;\r\n    for (int i = 0; i < 1000; i++) {\r\n        satisfyX2[i] = 0;\r\n    }\r\n    for (int i = 0; i < 1000; i++) {\r\n        satisfyY2[i] = 0;\r\n    }\r\n}\r\n// void Nextthree(int stux){\r\n\r\n// }\r\nvoid Nexttwo(int stux) {\r\n    reset2();\r\n    for (int i = 1; i <= store; i++) {\r\n        cnt2 = 0;\r\n        for (int d = 0; d < 4; d++) {\r\n            int new_x = satisfyX[i] + dx[d];\r\n            int new_y = satisfyY[i] + dy[d];\r\n            if (1 <= new_x && new_x <= N && 1 <= new_y && new_y <= N) {\r\n                if (empty_class[new_x][new_y] == 0) {\r\n                    //cout<<new_x<<\' \'<<new_y<<endl;\r\n                    cnt2++;\r\n                }\r\n            }\r\n        }\r\n        if (bignum2 < cnt2) {\r\n            bignum2 = cnt2;\r\n            store2 = 1;\r\n            satisfyX2[store2] = satisfyX[i];\r\n            satisfyY2[store2] = satisfyY[i];\r\n        }\r\n        else if (bignum2 == cnt2) {\r\n            store2++;\r\n            satisfyX2[store2] = satisfyX[i];\r\n            satisfyY2[store2] = satisfyY[i];\r\n        }\r\n    }\r\n    // cout<<store2<<endl;\r\n    //   for(int i=1;i<=store2;i++){\r\n    //     cout<<satisfyX2[i]<<\' \'<<satisfyY2[i]<<endl;\r\n    //   }\r\n    //cout<<store2<<endl;\r\n    if (store2 >= 2) {\r\n        Nextthree(stux);\r\n    }\r\n    else {\r\n        empty_class[satisfyX2[store2]][satisfyY2[store2]] = student_likestu[stux][1];\r\n    }\r\n    //printf_all();\r\n}\r\nvoid reset() {\r\n    bignum = 0;\r\n    store = 0;\r\n    for (int i = 0; i < 1000; i++) {\r\n        satisfyX[i] = 0;\r\n    }\r\n    for (int i = 0; i < 1000; i++) {\r\n        satisfyY[i] = 0;\r\n    }\r\n}\r\nvoid likestu(int stux, int stuy) {\r\n    //cout<<stux<<\' \'<<stuy<<endl;\r\n    reset();\r\n    for (int curx = 1; curx <= N; curx++) {\r\n        for (int cury = 1; cury <= N; cury++) {\r\n            if (empty_class[curx][cury] == 0) {\r\n                cnt = 0;\r\n                //  cout<<\'(\'<<cnt<<\')\'<<\' \';\r\n                for (int d = 0; d < 4; d++) {\r\n                    int new_x = curx + dx[d];\r\n                    int new_y = cury + dy[d];\r\n                    if (1 <= new_x && new_x <= N && 1 <= new_y && new_y <= N) {\r\n                        if (empty_class[new_x][new_y] == student_likestu[stux][stuy] || \r\n                            empty_class[new_x][new_y] == student_likestu[stux][stuy + 1] || \r\n                            empty_class[new_x][new_y] == student_likestu[stux][stuy + 2] || \r\n                            empty_class[new_x][new_y] == student_likestu[stux][stuy + 3]) {\r\n                            cnt++;\r\n                            //cout<<\'(\'<<curx<<\' \'<<cury<<\')\'<<endl; \r\n                        }\r\n                    }\r\n                }\r\n                //cout<<store<<\' \'<<bignum<<\' \'<<cnt<<endl;\r\n                if (bignum < cnt) {\r\n                    bignum = cnt;\r\n                    store = 1;\r\n                    satisfyX[store] = curx;\r\n                    satisfyY[store] = cury;\r\n                }\r\n                else if (bignum == cnt) {\r\n                    store++;\r\n                    satisfyX[store] = curx;\r\n                    satisfyY[store] = cury;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (store >= 2) {\r\n        Nexttwo(stux);\r\n    }\r\n    else {\r\n        empty_class[satisfyX[store]][satisfyY[store]] = student_likestu[stux][1];\r\n    }\r\n    //printf_all();\r\n   //  cout<<store<<endl;\r\n   //  for(int i=1;i<=store;i++){\r\n   //    cout<<satisfyX[i]<<\' \'<<satisfyY[i]<<endl;\r\n   //  }\r\n}\r\nint main() {\r\n    int CCCnt = 0;\r\n    int sum = 0;\r\n    int x = 0;\r\n    int y = 2;\r\n    int search = 0;\r\n    int k = 0;\r\n    cin >> N;\r\n    for (int i = 1; i <= N * N; i++) {\r\n        for (int j = 1; j <= 5; j++) {\r\n            cin >> student_likestu[i][j];\r\n        }\r\n        likestu(i, 2);\r\n    }\r\n    //cout<<\"++++++++++++++ㅅㅂ\"<<endl;\r\n    //printf_all();\r\n    for (int curx = 1; curx <= N; curx++) {\r\n        x++;\r\n        for (int cury = 1; cury <= N; cury++) {\r\n            k = 0;\r\n            for (int i = 1; i <= N * N; i++) {\r\n                k++;\r\n                if (empty_class[curx][cury] == student_likestu[k][1]) {\r\n                    search = i;\r\n                }\r\n            }\r\n            //cout<<search<<\' \';\r\n            CCCnt = 0;\r\n            for (int d = 0; d < 4; d++) {\r\n                int new_x = curx + dx[d];\r\n                int new_y = cury + dy[d];\r\n                if (1 <= new_x && new_x <= N && 1 <= new_y && new_y <= N) {\r\n                    if (empty_class[new_x][new_y] == student_likestu[search][y] || \r\n                        empty_class[new_x][new_y] == student_likestu[search][y + 1] || \r\n                        empty_class[new_x][new_y] == student_likestu[search][y + 2] || \r\n                        empty_class[new_x][new_y] == student_likestu[search][y + 3]) {\r\n                        CCCnt++;\r\n                        //cout<<CCCnt<<\' \';\r\n                    }\r\n                }\r\n            }\r\n            if (CCCnt == 0) {\r\n                sum += 0;\r\n            }\r\n            else if (CCCnt == 1) {\r\n                sum += 1;\r\n            }\r\n            else if (CCCnt == 2) {\r\n                sum += 10;\r\n            }\r\n            else if (CCCnt == 3) {\r\n                sum += 100;\r\n            }\r\n            else if (CCCnt == 4) {\r\n                sum += 1000;\r\n            }\r\n        }\r\n    }\r\n    cout << sum;\r\n    return 0;\r\n}','2021-11-18 14:49:39.170000','21608번 - 상어 초등학교',3),(21,'T = int(input())\r\nfor _ in range(1, T+1):\r\n    N = int(input())\r\n\r\n    ans = [0] * 5\r\n    sixty, ten, one = N//60, (N % 60)//10, N % 10\r\n\r\n    if one > 5:\r\n        ten += 1\r\n        one -= 10\r\n    if ten > 3:\r\n        sixty += 1\r\n        ten -= 6\r\n    if ten < 0 and one == 5:\r\n        ten += 1\r\n        one -= 10\r\n\r\n    ans[0] = sixty\r\n    ans[2-(ten >= 0)] = abs(ten)\r\n    ans[4-(one >= 0)] = abs(one)\r\n    print(*ans)','2021-11-18 14:51:02.712000','19940_피자 오븐',5),(22,'#include <iostream>\r\nusing namespace std;\r\n\r\nint main(void){\r\n    cout<<\"문제의 정답\";\r\n    return 0;\r\n}','2021-11-18 14:51:36.876000','백준 1237',1),(23,'#include <iostream>\r\nusing namespace std;\r\nint main(void){\r\n    cout<<\"10/14\";\r\n    return 0;\r\n}','2021-11-18 14:52:05.125000','백준 2555',1),(24,'# import sys\r\n# sys.stdin = open(\"input.txt\")\r\n\r\nn = int(input())\r\narr = [0] * 10\r\npoint = 1\r\n\r\nwhile n != 0:\r\n    while n % 10 != 9:\r\n        for i in str(n):\r\n            arr[int(i)] += point\r\n        n -= 1\r\n    if n < 10:\r\n        for i in range(n+1):\r\n            arr[i] += point\r\n        arr[0] -= point\r\n        break\r\n    else:\r\n        for i in range(10):\r\n            arr[i] += (n // 10+1) * point\r\n    arr[0] -= point\r\n    point *= 10\r\n    n //= 10\r\nfor i in arr:\r\n    print(i, end=\' \')','2021-11-18 14:52:43.073000','1019_책 페이지',5),(25,'#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nstruct Point {\r\n    int x, y;\r\n};\r\n\r\nvector<Point> points;\r\nint N;\r\n\r\nbool cmp_x(const Point &u, const Point &v) {\r\n    return u.x < v.x;\r\n}\r\n\r\nbool cmp_y(const Point &u, const Point &v) {\r\n    return u.y < v.y;\r\n}\r\n\r\nint squared_dist(Point &p1, Point &p2) {\r\n    return (p1.x-p2.x)*(p1.x-p2.x) + (p1.y-p2.y)*(p1.y-p2.y);\r\n}\r\n\r\nint min_dist;\r\nvoid ClosestPair(int left, int right){\r\n    if(right-left+1 <= 4) {\r\n        for(int i=left;i<right;++i) {\r\n            for(int j=i+1;j<=right;++j) {\r\n                int tmp = squared_dist(points[i], points[j]);\r\n                if(min_dist > tmp) {\r\n                    min_dist = tmp;\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    int mid = (left+right)/2;\r\n    ClosestPair(left, mid); //left\r\n    ClosestPair(mid+1, right); //right\r\n\r\n    vector<Point> sub;\r\n    for(int i=left;i<=mid;++i) {\r\n        int tmp = points[i].x-points[mid].x;\r\n        if(tmp * tmp < min_dist) {\r\n            sub.push_back(points[i]);\r\n        }\r\n    }\r\n    for(int i=mid+1;i<=right;++i) {\r\n        int tmp = points[i].x- points[mid].x;\r\n        if(tmp * tmp >= min_dist) break;\r\n        sub.push_back(points[i]);\r\n    }\r\n    sort(sub.begin(), sub.end(), cmp_y);\r\n\r\n    int n = sub.size();\r\n    for(int i=0; i<n-1; i++){\r\n        for(int j=i+1; j<n; j++){\r\n            int tmp = sub[j].y - sub[i].y;\r\n            if(tmp * tmp >= min_dist) break;\r\n            tmp = squared_dist(sub[i], sub[j]);\r\n            if(tmp<min_dist){\r\n                min_dist=tmp;\r\n            }\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\nint main(void){\r\n    int x, y;\r\n    scanf(\"%d\",&N);\r\n    for (int i=0; i<N; i++) {\r\n        scanf(\"%d %d\",&x,&y);\r\n        points.push_back(Point{x, y});\r\n    }\r\n    sort(points.begin(), points.end(), cmp_x);\r\n    min_dist = squared_dist(points[0], points[1]);\r\n    ClosestPair( 0, N-1);\r\n\r\n    printf(\"%d\", min_dist);\r\n    return 0;\r\n}','2021-11-18 14:52:47.601000','백준 5620',1),(26,'#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    printf(\"Hymn To Love\");\r\n    return 0;\r\n}','2021-11-18 14:53:17.726000','백준 9999',1),(27,'import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class Main {\r\n    static class Block{\r\n        int durability;\r\n        boolean robot;\r\n        public Block(int d){\r\n            durability = d;\r\n            robot = false;\r\n        }\r\n        public boolean isWornOut(){\r\n            return durability == 0;\r\n        }\r\n        public void loadRobot(){\r\n            robot = true;\r\n            durability--;\r\n        }\r\n        public void dropRobot(){\r\n            robot = false;\r\n        }\r\n        public boolean existRobot(){\r\n            return robot;\r\n        }\r\n    }\r\n    static class Conveyor{\r\n        int n;\r\n        ArrayList<Block> belt;\r\n        public Conveyor(int n){\r\n            this.n = n;\r\n            belt = new ArrayList<>();\r\n        }\r\n        public void addBlock(int d){\r\n            belt.add(new Block(d));\r\n        }\r\n        public void rotate() {\r\n            belt.add(0, belt.remove(2 * n - 1)); \r\n            if(belt.get(n - 1).existRobot()){ \r\n                belt.get(n - 1).dropRobot();\r\n            }\r\n        }\r\n        public void move(){\r\n            for(int i = n - 2; i >= 0; i--){ \r\n                if (belt.get(i).existRobot()) { \r\n                  \r\n                    if(!belt.get(i + 1).isWornOut() && !belt.get(i + 1).existRobot()){\r\n                        belt.get(i).dropRobot();\r\n                        belt.get(i + 1).loadRobot(); \r\n                        if(i + 1 == n - 1){ \r\n                            belt.get(i + 1).dropRobot(); \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        public void loadRobot(){\r\n        \r\n            if(!belt.get(0).existRobot() && !belt.get(0).isWornOut()){\r\n                belt.get(0).loadRobot(); \r\n            }\r\n        }\r\n        public int getNumberOfWornOutBlock(){\r\n            int cnt = 0;\r\n            for(int i = 0; i < 2*n; i++){\r\n                if(belt.get(i).isWornOut()){\r\n                    cnt++;\r\n                }\r\n            }\r\n            return cnt;\r\n        }\r\n    }\r\n    public static void main(String[] args) throws IOException {\r\n\r\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\r\n        String inputs = bufferedReader.readLine();\r\n        StringTokenizer stringTokenizer = new StringTokenizer(inputs);\r\n        int N= Integer.parseInt(stringTokenizer.nextToken());\r\n        int K= Integer.parseInt(stringTokenizer.nextToken());\r\n\r\n        Conveyor conveyor = new Conveyor(N);\r\n\r\n        inputs = bufferedReader.readLine();\r\n        stringTokenizer = new StringTokenizer(inputs);\r\n        for(int i = 0; i < 2 * N; i++){\r\n            int durability = Integer.parseInt(stringTokenizer.nextToken());\r\n            conveyor.addBlock(durability);\r\n        }\r\n        int turn = 1;\r\n        while(true){\r\n            conveyor.rotate();\r\n            if(conveyor.getNumberOfWornOutBlock() >= K) break;\r\n            conveyor.move();\r\n            if(conveyor.getNumberOfWornOutBlock() >= K) break;\r\n            conveyor.loadRobot();\r\n            if(conveyor.getNumberOfWornOutBlock() >= K) break;\r\n            turn++;\r\n        }\r\n        System.out.println(turn);\r\n    }\r\n}\r\n','2021-11-18 14:54:12.055000','20055번 - 컨베이어 벨트 위의 로봇',3),(28,'#include <iostream>\r\nusing namespace std;\r\nint num[1000002] = {0,};\r\nint main(){\r\n    int T;\r\n    cin>>T;\r\n    \r\n    for(int i = 0; i<T; i++){\r\n\r\n        int N;\r\n        long long ans = 0;\r\n        \r\n        cin>>N;\r\n        for(int j = 0; j<N; j++){\r\n            cin>>num[j];\r\n        }\r\n        \r\n        int max_budget = num[N-1];\r\n        \r\n        for(int j = N-1; j>=0; j--){\r\n            if(max_budget >= num[j]){\r\n                ans = ans + (max_budget-num[j]);\r\n            }\r\n            else{\r\n                max_budget = num[j];\r\n            }\r\n        }\r\n        cout<<\"#\"<<i+1<<\" \"<<ans<<\"\\n\";\r\n        for(int j = 0; j<N; j++){\r\n            num[j] = 0;\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n}','2021-11-18 14:54:58.696000','1859. 백만장자 프로젝트',6),(29,'def solution(n):\r\n    arr = [1, 2, 4]\r\n    answer = \'\'\r\n    \r\n    while (n > 0):\r\n        n -= 1\r\n        answer = str(arr[n % 3]) + answer\r\n        n //= 3\r\n    return answer\r\n\r\nT = int(input())\r\nfor i in range(T):\r\n    n = int(input())\r\n    print(solution(n))','2021-11-18 14:55:03.169000','124 나라의 숫자',5),(30,'def solution(people, limit):\r\n    answer = 0\r\n    people.sort()\r\n    start = 0\r\n    end = len(people) - 1\r\n    while start <= end:\r\n        answer += 1\r\n        if people[start] + people[end] <= limit:\r\n            start += 1\r\n        end -= 1\r\n    \r\n    return answer\r\n\r\npeople = [70, 50, 80, 50]\r\nlimit = 100\r\n\r\nprint(solution(people, limit))','2021-11-18 14:56:37.798000','구명보트',5),(31,'import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class Main {\r\n\r\n    static int N; \r\n    static int[][] map;\r\n    static int[] dr= {0,1,0,-1}; \r\n    static int[] dc = {-1,0,1,0};\r\n    static int[][] dsr = {\r\n            {-1, 1,-2,-1, 1, 2,-1, 1, 0}, \r\n            { 0, 0, 1, 1, 1, 1, 2, 2, 3}, \r\n            { 1,-1, 2, 1,-1,-2, 1,-1, 0}, \r\n            { 0, 0,-1,-1,-1,-1,-2,-2,-3} \r\n    };\r\n    static int[][] dsc = {\r\n            { 0, 0,-1,-1,-1,-1,-2,-2,-3}, \r\n            {-1, 1,-2,-1, 1, 2,-1, 1, 0}, \r\n            { 0, 0, 1, 1, 1, 1, 2, 2, 3}, \r\n            { 1,-1, 2, 1,-1,-2, 1,-1, 0} \r\n    };\r\n    static int[] ratio = { 1, 1, 2, 7, 7, 2,10,10, 5};\r\n    static int total; \r\n\r\n    public static void main(String[] args) throws NumberFormatException, IOException {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        StringTokenizer st = null;\r\n        N = Integer.parseInt(br.readLine());\r\n        map = new int[N][N];\r\n\r\n        for(int i=0; i<N; i++) {\r\n            st = new StringTokenizer(br.readLine());\r\n            for(int j=0; j<N; j++) {\r\n                map[i][j] = Integer.parseInt(st.nextToken());\r\n            }\r\n        }\r\n\r\n        total = 0;\r\n   \r\n        go(N/2, N/2, 0); \r\n        System.out.println(total);\r\n    }\r\n\r\n    private static void go(int xr, int xc, int d) {\r\n        int move = 1; \r\n        int cnt = 0; \r\n\r\n        while(true) {\r\n\r\n            if(cnt==2) {\r\n                cnt = 0;\r\n                move++;\r\n            }\r\n\r\n            for(int i=0; i<move; i++) {\r\n                int yr = xr+dr[d];\r\n                int yc = xc+dc[d];\r\n                if(!canGo(yr,yc)) break;\r\n                int y_sand = map[yr][yc];\r\n\r\n                for(int n=0; n<9; n++) { \r\n                    int nr = xr+dsr[d][n];\r\n                    int nc = xc+dsc[d][n];\r\n                    int r = ratio[n];\r\n                    int sand = (map[yr][yc]*r/100);\r\n                    y_sand -= sand ;\r\n\r\n                    if(!canGo(nr,nc)) { \r\n                        total += sand;\r\n                    }else {\r\n                        map[nr][nc]+=sand;\r\n                    }\r\n                }\r\n                map[yr][yc]=0; \r\n\r\n                int ar = yr+dr[d];\r\n                int ac = yc+dc[d];\r\n                if(!canGo(ar,ac)) { \r\n                    total += y_sand;\r\n                }else {\r\n                    map[ar][ac] += y_sand;\r\n                }\r\n                xr = yr;\r\n                xc = yc;\r\n\r\n            }\r\n\r\n            cnt++;\r\n            d = (d+1)%4;\r\n\r\n            if(xr==0 && xc ==0) { \r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static boolean canGo(int nr, int nc) {\r\n        if(0<= nr && nr <N && 0<= nc && nc <N) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}','2021-11-18 14:57:09.944000','20057번 - 마법사 상어와 토네이도',3),(32,'#include<iostream>\r\nusing namespace std;\r\n\r\nint main(int argc, char** argv)\r\n{\r\n	int test_case;\r\n	int T;\r\n	\r\n	cin>>T;\r\n\r\n	for(test_case = 1; test_case <= T; ++test_case)\r\n	{\r\n        int n;\r\n        cin>>n;\r\n        if(n%2==0){\r\n            n=(n/2)*(-1);\r\n        }\r\n        else{\r\n            n=(n/2)+(n%2);\r\n        }\r\n        cout<<\"#\"<<test_case<<\" \"<<n<<\'\\n\';\r\n	}\r\n	return 0;//정상종료시 반드시 0을 리턴해야합니다.\r\n}','2021-11-18 14:57:14.475000','1986. 지그재그 숫자',6),(33,'#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint arr[500][500];\r\nint N, M;\r\n\r\nint main(void) {\r\n	cin >> N >> M;\r\n	for (int i = 0; i < N; i++) {\r\n		for (int j = 0; j < M; j++) {\r\n			cin >> arr[i][j];\r\n		}\r\n	}\r\n	int answer = 0;\r\n	for (int i = 0; i < N; i++) {\r\n		for (int j = 0; j < M; j++) {\r\n			// ■\r\n			// ■\r\n			// ■\r\n			// ■\r\n			if (i + 3 < N) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i + 2][j] + arr[i + 3][j];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■■■\r\n			if (j + 3 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i][j + 2] + arr[i][j + 3];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■\r\n			// ■■\r\n			if (i + 1 < N && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i][j + 1] + arr[i + 1][j + 1];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■\r\n			// ■\r\n			// ■■\r\n			if (i + 2 < N && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i + 2][j] + arr[i + 2][j + 1];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■■\r\n			// ■\r\n			if (i + 1 < N && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i][j + 1] + arr[i][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■\r\n			//  ■\r\n			//  ■\r\n			if (i + 2 < N && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i + 1][j + 1] + arr[i + 2][j + 1];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			//   ■\r\n			// ■■■\r\n			if (i - 1 >= 0 && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i][j + 2] + arr[i - 1][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			//  ■\r\n			//  ■\r\n			// ■■\r\n			if (i - 2 >= 0 && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i - 1][j + 1] + arr[i - 2][j + 1];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■\r\n			// ■■■\r\n			if (i + 1 < N && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i + 1][j + 1] + arr[i + 1][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■\r\n			// ■\r\n			// ■\r\n			if (i + 2 < N && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i + 2][j] + arr[i][j + 1];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■■\r\n			//   ■\r\n			if (i + 1 < N && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i][j + 2] + arr[i + 1][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■\r\n			// ■■\r\n			//  ■\r\n			if (i + 2 < N && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i + 1][j + 1] + arr[i + 2][j + 1];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			//  ■■\r\n			// ■■\r\n			if (i - 1 >= 0 && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i - 1][j + 1] + arr[i - 1][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			//  ■\r\n			// ■■\r\n			// ■\r\n			if (i - 2 >= 0 && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i - 1][j] + arr[i - 1][j + 1] + arr[i - 2][j + 1];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■\r\n			//  ■■\r\n			if (i + 1 < N && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i + 1][j + 1] + arr[i + 1][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			//  ■\r\n			// ■■■\r\n			if (i - 1 >= 0 && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i - 1][j + 1] + arr[i][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■\r\n			// ■■\r\n			// ■\r\n			if (i + 2 < N && j + 1 < M) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i + 1][j + 1] + arr[i + 2][j];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			// ■■■\r\n			//  ■\r\n			if (i + 1 < N && j + 2 < M) {\r\n				int sum = arr[i][j] + arr[i][j + 1] + arr[i + 1][j + 1] + arr[i][j + 2];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n			//  ■\r\n			// ■■\r\n			//  ■\r\n			if (i + 2 < N && j - 1 >= 0) {\r\n				int sum = arr[i][j] + arr[i + 1][j] + arr[i + 1][j - 1] + arr[i + 2][j];\r\n				if (answer < sum) answer = sum;\r\n			}\r\n		}\r\n	}\r\n\r\n	cout << answer;\r\n\r\n	return 0;\r\n}','2021-11-18 14:57:46.581000','백준 14500 - 테트로미노',1),(34,'def solution(n):\r\n    cnt = 0\r\n    for i in range(1, n+1):\r\n        temp = 0\r\n        for j in range(i, n+1):\r\n            temp += j\r\n            if temp == n:\r\n                cnt += 1\r\n                break\r\n            elif temp > n:\r\n                break\r\n    return cnt\r\n\r\nn = int(input())\r\nprint(solution(n))','2021-11-18 14:58:09.719000','숫자의 표현',5),(35,'#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nstruct Fireball {\r\n	int mass;\r\n	int speed;\r\n	int direction;\r\n	Fireball(int m, int s, int d)\r\n		: mass(m), speed(s), direction(d) {}\r\n};\r\n\r\nvector<Fireball> currMap[50][50];\r\nvector<Fireball> nextMap[50][50];\r\nint N, M, K; // N: size of map, M: number of Fireball, K: turn\r\nint dy[] = { -1, -1, 0, 1, 1, 1, 0, -1 };\r\nint dx[] = { 0, 1, 1, 1, 0, -1, -1, -1 };\r\n\r\nvoid nextPosition(int& y, int& x, int d, int s) {\r\n	y = y + dy[d] * s;\r\n	x = x + dx[d] * s;\r\n	y = (y + N * 1000) % N;\r\n	x = (x + N * 1000) % N;\r\n}\r\n\r\nint main(void) {\r\n	ios::sync_with_stdio(false);\r\n	cin.tie(NULL);\r\n	cin >> N >> M >> K;\r\n\r\n	for (int i = 0; i < M; i++) {\r\n		int r, c, m, s, d;\r\n		cin >> r >> c >> m >> s >> d;\r\n		currMap[r - 1][c - 1].push_back(Fireball(m, s, d));\r\n	}\r\n\r\n	for (int turn = 0; turn < K; turn++) {\r\n		for (int i = 0; i < N; i++) {\r\n			for (int j = 0; j < N; j++) {\r\n				int len = currMap[i][j].size();\r\n				if (len > 0) {\r\n					for (int l = 0; l < len; l++) {\r\n						int y = i;\r\n						int x = j;\r\n						int d = currMap[i][j][l].direction;\r\n						nextPosition(y, x, d, currMap[i][j][l].speed);\r\n						nextMap[y][x].push_back(currMap[i][j][l]);\r\n					}\r\n					currMap[i][j].clear();\r\n				}\r\n			}\r\n		}\r\n		for (int i = 0; i < N; i++) {\r\n			for (int j = 0; j < N; j++) {\r\n				int len = nextMap[i][j].size();\r\n				if (len > 0) {\r\n					if (len == 1) {\r\n						currMap[i][j].push_back(nextMap[i][j][0]);\r\n					}\r\n					else {\r\n						int mass = 0;\r\n						int speed = 0;\r\n						bool even = nextMap[i][j][0].direction % 2 == 0 ? true : false;\r\n						bool nextDir = true;\r\n						for (int l = 0; l < len; l++) {\r\n							mass += nextMap[i][j][l].mass;\r\n							speed += nextMap[i][j][l].speed;\r\n							if (nextDir && (nextMap[i][j][l].direction % 2 == 0) != even) {\r\n								nextDir = false;\r\n							}\r\n						}\r\n						int nextMass = mass / 5;\r\n						int nextSpeed = speed / len;\r\n						if (nextMass > 0) {\r\n							if (nextDir) { // 0, 2, 4, 6\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 0));\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 2));\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 4));\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 6));\r\n							}\r\n							else { // 1, 3, 5, 7\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 1));\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 3));\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 5));\r\n								currMap[i][j].push_back(Fireball(nextMass, nextSpeed, 7));\r\n							}\r\n						}\r\n					}\r\n					nextMap[i][j].clear();\r\n				}\r\n			}\r\n		}\r\n	}\r\n	int totalMass = 0;\r\n	for (int i = 0; i < N; i++) {\r\n		for (int j = 0; j < N; j++) {\r\n			int len = currMap[i][j].size();\r\n			for (int l = 0; l < len; l++) {\r\n				totalMass += currMap[i][j][l].mass;\r\n			}\r\n		}\r\n	}\r\n	cout << totalMass;\r\n\r\n	return 0;\r\n}','2021-11-18 14:59:26.447000','20056번 - 마법사 상어와 파이어볼',3),(36,'//\r\n// Created by Kina on 2020/04/23.\r\n//\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <queue>\r\n#define N 150100\r\nusing namespace std;\r\nint n, k, m;\r\n\r\nint segTree[4 * N];\r\nlong long h[N];\r\npair<long long, int> xy[N];\r\npriority_queue<long long> q;\r\n\r\nint makeseg(int idx, int i, int j) {\r\n    if (i == j) return segTree[idx] = i;\r\n    int mid = (i + j) / 2;\r\n    int l = makeseg(idx << 1, i, mid);\r\n    int r = makeseg((idx << 1) + 1, mid + 1, j);\r\n\r\n    return segTree[idx] = h[l] < h[r] ? l : r;\r\n}\r\n\r\nint query(int idx, int i, int j, int L, int R) {\r\n    if (i <= L && R <= j) return segTree[idx];\r\n    if (j < L || R < i) return m + 1;\r\n    int mid = (L + R) / 2;\r\n    int l = query(idx << 1, i, j, L, mid);\r\n    int r = query((idx << 1) + 1, i, j, mid + 1, R);\r\n    return  h[l] < h[r] ? l : r;\r\n}\r\nint query(int i, int j) {\r\n    return query(1, i, j, 0, m);\r\n}\r\n\r\nlong long findV(int i, int j, long long pre_h) {\r\n    if (i > j)return 0;\r\n    int m = query(i, j);\r\n    long long volumn = (h[m] - pre_h) * (xy[j].second - xy[i].first);\r\n\r\n    long long left = findV(i, m - 1, h[m]);\r\n    long long right = findV(m + 1, j, h[m]);\r\n    q.push(min(left,right));\r\n\r\n    return max(left, right) + volumn;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    cin >> n;\r\n    int _tmp;\r\n\r\n    cin >> _tmp >> _tmp;\r\n    m = n/2-2;\r\n    h[m+1] = 2147483647;\r\n    for (int i = 0; i <= m; i++) {\r\n        cin >> xy[i].first >> h[i] >> xy[i].second >> _tmp;\r\n    }\r\n    cin >> _tmp >> _tmp;\r\n    makeseg(1, 0, m);\r\n\r\n    cin >> k;\r\n    long long res = findV(0, m, 0);\r\n    k--;\r\n\r\n    while (k-- && !q.empty()) {\r\n        res += q.top();\r\n        q.pop();\r\n    }\r\n    cout << res;\r\n}','2021-11-18 15:12:44.678000','백준 8987 - 수족관 3',8),(40,'import java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Scanner;\r\n\r\nclass Edge implements Comparable<Edge> {\r\n    int v1;\r\n    int v2;\r\n    int cost;\r\n    Edge(int v1, int v2, int cost) {\r\n        this.v1 = v1;\r\n        this.v2 = v2;\r\n        this.cost = cost;\r\n    }\r\n    @Override\r\n    public int compareTo(Edge o) {\r\n        if(this.cost < o.cost)\r\n            return -1;\r\n        else if(this.cost == o.cost)\r\n            return 0;\r\n        else\r\n            return 1;\r\n    }\r\n}\r\npublic class Main {\r\n    public static int[] parent;\r\n    public static ArrayList<Edge> edgeList;\r\n	\r\n    public static void union(int x, int y) {\r\n        x = find(x);\r\n        y = find(y);\r\n        if(x != y)\r\n            parent[y] = x;\r\n    }\r\n	\r\n    public static int find(int x) {\r\n        if(parent[x] == x) {\r\n            return x;\r\n        }\r\n        return parent[x] = find(parent[x]);\r\n    }\r\n    public static boolean isSameParent(int x, int y) {\r\n        x = find(x);\r\n        y = find(y);\r\n        if(x == y) return true;\r\n        else return false;\r\n    }\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int v = sc.nextInt();\r\n        int e = sc.nextInt();\r\n		\r\n        edgeList = new ArrayList<Edge>();\r\n        for(int i = 0; i < e; i++) {\r\n            int v1 = sc.nextInt();\r\n            int v2 = sc.nextInt();\r\n            int cost = sc.nextInt();\r\n            edgeList.add(new Edge(v1,v2,cost));\r\n        }\r\n		\r\n        parent = new int[v+1];\r\n        for(int i = 1; i <= v; i++) {\r\n            parent[i] = i;\r\n        }\r\n		\r\n        Collections.sort(edgeList);\r\n		\r\n        int sum = 0;\r\n        for(int i = 0; i < edgeList.size(); i++) {\r\n            Edge edge = edgeList.get(i);\r\n            if(!isSameParent(edge.v1, edge.v2)) {\r\n                sum += edge.cost;\r\n                union(edge.v1, edge.v2);\r\n            }\r\n        }\r\n		\r\n        System.out.println(sum);\r\n    }	\r\n}','2021-11-18 16:17:42.702000','오 신기해',10),(42,'for i in range(int(input())):\r\n    a, b = map(int, input().split())\r\n    print(a*b)\r\n    조원식바보\r\n    한훈희바보\r\n    ','2021-11-18 17:31:58.186000','게시판 저장',14);
/*!40000 ALTER TABLE `post` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-11-18 17:32:07
